/*
 * Copyright (c) 2023. Eric Angeli
 *
 *  Permission is hereby granted, free of charge,
 *  to any person obtaining a copy of this software
 *  and associated documentation files (the "Software"),
 *  to deal in the Software without restriction,
 *  including without limitation the rights to use, copy,
 *  modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit
 *  persons to whom the Software is furnished to do so,
 *  subject to the following conditions:
 *
 *  The above copyright notice and this permission
 *  notice shall be included in all copies or substantial
 *  portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
 *  AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *  DEALINGS IN THE SOFTWARE.
 */
package com.thegoate.eut;

import org.atteo.classindex.IndexAnnotated;

import java.lang.annotation.Inherited;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@Retention(RetentionPolicy.RUNTIME)
@IndexAnnotated
@Inherited
public @interface EutConfig {

    /**
     * The path to look for the properties files in.<br>
     * This defaults to what is specified in the eut/eut.config for "properties.location".<br>
     * If eut/eut.config is not defined or "properties.location" is not set in the file, will default to "eut"
     * @return String representing the path to the directory containing the properties files, defaults to "eut::properties.location,eut"
     */
    String location() default "eut::properties.location,eut";

    /**
     * The naming pattern for the name(s) of the properties file(s).<br>
     * Use the `${...}` notation to replace with a value set either as an environment or system parameter.<br>
     * Most common usage is to pass the value in using -D on the command line, but can also be set at the environment level.<br>
     * Example: if set to: "${profile}"; Then to use it you can pass "-Dprofile=local" or create an equivalent environment variable. <br>
     * This will replace `${profile}` with `local`.
     * @return String the naming pattern to use for the properties file(s), defaults to "${profile}"
     */
    String pattern() default "${profile}";

    /**
     * The extension to use for the properties files.<br>
     * This will be appended to the file name.<br>
     * The default value is "properties".<br>
     * By default, the file will be treated as a flat text file regardless of extension.<br>
     * Two additional file types and formats are supported: json and yml/yaml.<br>
     * If you specify either json or yml (or yaml), the file will be loaded accordingly and will fail if the file is not valid for that type.
     * @return String specifying the file extension, defaults to "properties"
     */
    String extension() default "properties";

    /**
     * The default file to load if the file name generated by the pattern does not exist.<br>
     * This should include the full path to the file, regardless of the "location" specified.
     * @return String specifying the default file to load, defaults to "eut/eut.config"
     */
    String defaultFile() default "eut/eut.config";

    /**
     * The default "profile" to use.<br>
     * If the pattern does not use the "profile" key name in the pattern, this value is ignored.
     * @return String for the default "profile" to use, defaults to "eut".
     */
    String defaultProfile() default "eut";

    /**
     * Whether to use the eut/eut.config file for defining the settings for the properties/config file.<br>
     * If set to true, all other settings in this annotation are ignored, and only the values in the eut/eut.config file will be used for defining the settings for the properties/config file.
     * @return boolean to use eut/eut.config, defaults to false, set to true to use the settings in the eut/eut.config file.
     */
    boolean useEutConfigFile() default false;

}
